-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity GetLocation_dm_detMap_layer_rom is 
    generic(
             dwidth     : integer := 2; 
             awidth     : integer := 12; 
             mem_size    : integer := 2080
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of GetLocation_dm_detMap_layer_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "00", 1 to 16=> "01", 17 to 24=> "00", 25 to 56=> "01", 57 to 65=> "00", 66 to 81=> "01", 
    82 to 89=> "00", 90 to 121=> "01", 122 to 130=> "00", 131 to 146=> "01", 147 to 154=> "00", 155 to 186=> "01", 
    187 to 195=> "00", 196 to 211=> "01", 212 to 219=> "00", 220 to 251=> "01", 252 to 260=> "00", 261 to 276=> "01", 
    277 to 284=> "00", 285 to 316=> "01", 317 to 325=> "00", 326 to 341=> "01", 342 to 349=> "00", 350 to 381=> "01", 
    382 to 390=> "00", 391 to 406=> "01", 407 to 414=> "00", 415 to 446=> "01", 447 to 455=> "00", 456 to 471=> "01", 
    472 to 479=> "00", 480 to 511=> "01", 512 to 520=> "00", 521 to 536=> "10", 537 to 544=> "00", 545 to 576=> "10", 
    577 to 585=> "00", 586 to 601=> "10", 602 to 609=> "00", 610 to 641=> "10", 642 to 650=> "00", 651 to 666=> "10", 
    667 to 674=> "00", 675 to 706=> "10", 707 to 715=> "00", 716 to 731=> "10", 732 to 739=> "00", 740 to 771=> "10", 
    772 to 780=> "00", 781 to 796=> "10", 797 to 804=> "00", 805 to 836=> "10", 837 to 845=> "00", 846 to 861=> "10", 
    862 to 869=> "00", 870 to 901=> "10", 902 to 910=> "00", 911 to 926=> "10", 927 to 934=> "00", 935 to 966=> "10", 
    967 to 975=> "00", 976 to 991=> "10", 992 to 999=> "00", 1000 to 1031=> "10", 1032 to 1040=> "00", 1041 to 1056=> "11", 
    1057 to 1064=> "00", 1065 to 1096=> "11", 1097 to 1105=> "00", 1106 to 1121=> "11", 1122 to 1129=> "00", 1130 to 1161=> "11", 
    1162 to 1170=> "00", 1171 to 1186=> "11", 1187 to 1194=> "00", 1195 to 1226=> "11", 1227 to 1235=> "00", 1236 to 1251=> "11", 
    1252 to 1259=> "00", 1260 to 1291=> "11", 1292 to 1300=> "00", 1301 to 1316=> "11", 1317 to 1324=> "00", 1325 to 1356=> "11", 
    1357 to 1365=> "00", 1366 to 1381=> "11", 1382 to 1389=> "00", 1390 to 1421=> "11", 1422 to 1430=> "00", 1431 to 1446=> "11", 
    1447 to 1454=> "00", 1455 to 1486=> "11", 1487 to 1495=> "00", 1496 to 1511=> "11", 1512 to 1519=> "00", 1520 to 1551=> "11", 
    1552 to 1560=> "00", 1561 to 1576=> "11", 1577 to 1584=> "00", 1585 to 1616=> "11", 1617 to 1625=> "00", 1626 to 1641=> "11", 
    1642 to 1649=> "00", 1650 to 1681=> "11", 1682 to 1690=> "00", 1691 to 1706=> "11", 1707 to 1714=> "00", 1715 to 1746=> "11", 
    1747 to 1755=> "00", 1756 to 1771=> "11", 1772 to 1779=> "00", 1780 to 1811=> "11", 1812 to 1820=> "00", 1821 to 1836=> "11", 
    1837 to 1844=> "00", 1845 to 1876=> "11", 1877 to 1885=> "00", 1886 to 1901=> "11", 1902 to 1909=> "00", 1910 to 1941=> "11", 
    1942 to 1950=> "00", 1951 to 1966=> "11", 1967 to 1974=> "00", 1975 to 2006=> "11", 2007 to 2015=> "00", 2016 to 2031=> "11", 
    2032 to 2039=> "00", 2040 to 2071=> "11", 2072 to 2079=> "00" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity GetLocation_dm_detMap_layer is
    generic (
        DataWidth : INTEGER := 2;
        AddressRange : INTEGER := 2080;
        AddressWidth : INTEGER := 12);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of GetLocation_dm_detMap_layer is
    component GetLocation_dm_detMap_layer_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    GetLocation_dm_detMap_layer_rom_U :  component GetLocation_dm_detMap_layer_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


